name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v1.16.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Set up Node.js v14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/

      - uses: actions/checkout@v2

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build and bundle the plugin
        id: build
        run: |
          make dist
          echo ::set-output name=BUNDLE_NAME::$(cd dist; ls *.tar.gz)
        env:
          TERM: dumb

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ steps.build.outputs.BUNDLE_NAME }}
          asset_name: ${{ steps.build.outputs.BUNDLE_NAME }}
          asset_content_type: application/gzip
